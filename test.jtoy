//map :: (array: [] $T, f: (T) -> $R) -> [] R {
//}

//array_unordered_remove :: inline (array: *[..] $T, item: T) -> s64 {
//    return 0;
//}

REPEATING :: 0x1;

//file := cast (*Compiler_Message_File) message;
#import "test2.jtoy";

Vector2 :: struct
{
    x : float = 1;
    y : float = 2;
};

printf :: (format : * char, ..) -> int #foreign;

Factorial :: (n : s64) -> s64 { if n == 0 return 1; return n * Factorial(n-1); }

main :: ()
{
	i := 0; // BB (adrianb) What's the right type for this? s64?
    c := CLoop();
    a :: 2;
    b := 900;

    pB := *b;
    << pB = 400;

    // BB (adrianb) Should error on i < c because types don't match...

	while i < c
    {
        printf("\"i\" = %d\n", a + << pB + -i);
        ++i;
    }

    printf("factorial(%ld) == %ld\n", CLoop(), Factorial(CLoop()));
}