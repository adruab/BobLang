//map :: (array: [] $T, f: (T) -> $R) -> [] R {
//}

//array_unordered_remove :: inline (array: *[..] $T, item: T) -> s64 {
//    return 0;
//}

REPEATING :: 0x1;

//file := cast (*Compiler_Message_File) message;
#import "test2.jtoy";

//Vector2 :: struct
//{
//    x : float;
//    y : float;
//};

//printf :: (format : * char, ..) -> int #foreign;

main :: ()
{
	i := 0;
//    c := CLoop();
	
//	while i < c printf("\"i\" = %d\n", i);

//	return;
}